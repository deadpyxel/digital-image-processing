[bumpversion]
current_version = 0.9.1
commit = True
tag = True
message = bump: version {current_version} -> {new_version}

[metadata]
name = bot-facebook
version = 0.9.0
description = a bot to fetch Facebook posts data
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/instituto-libcom/bot-facebook
author = deadpyxel
author_email = ghost0092@gmail.com
license = MIT
license_file = LICENSE
classifiers =
	License :: OSI Approved :: MIT License
	Programming Language :: Python :: 3
	Programming Language :: Python :: 3 :: Only
	Programming Language :: Python :: 3.7
	Programming Language :: Python :: 3.8
	Programming Language :: Python :: Implementation :: CPython

[options]
python_requires = >=3.7

[bumpversion:file:facebook_bot/constants.py]
search = VERSION = {current_version}
replace = VERSION = {new_version}

[bumpversion:file:setup.cfg]
search = version = {current_version}
replace = version = {new_version}

[flake8]
enable-extensions = G
exclude = .git, .venv, __init__.py
ignore = E203,E501,W503,S101
max-line-length = 80
application-import-names = facebook_bot,tests

[coverage:run]
omit = tests/*,main.py

[coverage:report]
show_missing = True

[mypy]
files = facebook_bot,tests,main.py
warn_unused_configs = True
check_untyped_defs = True
disallow_any_generics = True
disallow_incomplete_defs = True
disallow_untyped_defs = True
no_implicit_optional = True

[mypy-tests.*]
disallow_untyped_defs = False

[mypy-facebook.*]
ignore_missing_imports = True
disallow_untyped_defs = False


[tool:pytest]
python_files = tests/*.py
markers =
	fast: marks a test as a fast execution test.
	slow: marks a test as a slow execution test.
	db_dependent: marks a test with database dependencies.
	network_dependent: marks a test as network dependent.
	services: marks a test belonging to the service layer.
	adapter: marks a test belonging to the abstraction layer.
	domain: marks a test that deals with domain (business) logic and objects.
	auth: marks a test that has to do with authenticantion and authorization.
	integration: marks a test that is meant to be used as integration testing
